pipeline BaterytempraturePipeline {

    constraint IntegerNotEmptyZeroConstraint oftype RangeConstraint {
  		lowerBound: 1;
	}

	valuetype InegerNotEmptyZero oftype integer {
    	constraints: [ IntegerNotEmptyZeroConstraint ];
	}

   constraint TextNotEmptyConstraint oftype LengthConstraint {
  		minLength: 1;
	}

	valuetype TextNotEmpty oftype text {
    	constraints: [ TextNotEmptyConstraint ];
	}
      
    constraint MonthConstraint oftype RangeConstraint {
  		lowerBound: 1;
        upperBound: 12;
	}

	valuetype Month oftype integer {
    	constraints: [ MonthConstraint ];
	}
    
    constraint TempratureConstraint oftype RangeConstraint {
  		lowerBound: 0; 
	}

	valuetype Temprature oftype integer {
    	constraints: [ TempratureConstraint ];
	}
	
	constraint GeraetAktivConstraint oftype AllowlistConstraint {
    	allowlist: [ "Ja", "Nein" ];
	}

	valuetype GeraetAktiv oftype text {
		constraints: [GeraetAktivConstraint];
	}

    transform CelsiusToFahrenheit {
        from tempCelsius oftype decimal;
        to tempFahrenheit oftype decimal;
        tempFahrenheit: (tempCelsius * 9/5) + 32; 
    }

	
	block BaterytempratureFileDownloader oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }


	pipe {
		from: BaterytempratureFileDownloader;
		to: BaterytempratureFileExtractor;
	}

    block BaterytempratureFileExtractor oftype ArchiveInterpreter {
        archiveType: "zip";
    }
    
    pipe {
		from: BaterytempratureFileExtractor;
		to: BaterytempratureFilePicker;
	}

	block BaterytempratureFilePicker oftype FilePicker {
        path: "/data.csv";
    }

    pipe {
		from: BaterytempratureFilePicker;
		to: BaterytempratureFileInterpreter;
	}

    block BaterytempratureFileInterpreter oftype TextFileInterpreter {

	}

    pipe {
		from: BaterytempratureFileInterpreter;
		to: BaterytempratureCSVInterpreter;
	}

	block BaterytempratureCSVInterpreter oftype CSVInterpreter {
		enclosing: '"';
        delimiter: ";";
	}

	pipe {
		from: BaterytempratureCSVInterpreter;
		to: ColumnSelector;
	}

    block ColumnSelector oftype CellRangeSelector {
        select: range A1:K*;
	}

    pipe {
		from: ColumnSelector;
		to: TableInterpreter;
	}

  

    block TableInterpreter oftype TableInterpreter {
		header: true;
		columns: [
			"Geraet" oftype InegerNotEmptyZero,
			"Hersteller" oftype TextNotEmpty,
			"Model" oftype TextNotEmpty,
			"Monat" oftype Month,
			"Temperatur in °C (DWD)" oftype Temprature,
			"Batterietemperatur in °C" oftype Temprature,
			"Geraet aktiv" oftype GeraetAktiv
		];
	}

	pipe {
		from: TableInterpreter;
		to: TemperatureTransformer;
	}

	 block TemperatureTransformer oftype TableTransformer {
        inputColumn: 'Temperatur in °C (DWD)';
        outputColumn: 'Temperatur in °C (DWD)';
        use: CelsiusToFahrenheit;
    }

    pipe {
		from: TemperatureTransformer;
		to: BatterytempratureTransformer;
	}

    block BatterytempratureTransformer oftype TableTransformer {
        inputColumn: 'Batterietemperatur in °C';
        outputColumn: 'Batterietemperatur in °C';
        use: CelsiusToFahrenheit;
    }

     pipe {
		from: BatterytempratureTransformer;
		to: Loader;
	}

	block Loader oftype SQLiteLoader {
		table: "temperatures";
		file: "./temperatures.sqlite";
	}
}